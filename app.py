import dash
import dash_core_components as dcc
import dash_html_components as html
from dash.dependencies import Input, Output

import pandas as pd
import plotly.graph_objs as go

external_stylesheets = ['https://codepen.io/chriddyp/pen/bWLwgP.css']

app = dash.Dash(__name__, external_stylesheets=external_stylesheets)

# Load Data
df = pd.read_csv("data/openFEMA_claims20190430.csv", encoding='utf-8', parse_dates=['dateofloss'])
cat_columns = ['agriculturestructureindicator', 'basementenclosurecrawlspacetype', 'condominiumindicator', 'countycode', 'elevatedbuildingindicator', 'elevationcertificateindicator', 'censustract', 'floodzone', 'houseworship', 'locationofcontents', 'numberoffloorsintheinsuredbuilding', 'nonprofitindicator', 'obstructiontype', 'occupancytype', 'postfirmconstructionindicator', 'ratemethod', 'smallbusinessindicatorbuilding', 'state', 'reportedzipcode', 'primaryresidence']
df[cat_columns] = df[cat_columns].astype('category')
df['year'] = df['dateofloss'].dt.year
df['month'] = df['dateofloss'].dt.month
df.drop(columns=['yearofloss', 'lowestfloorelevation', 'asofdate'], inplace=True)

df_state = df.groupby('state')['amountpaidonbuildingclaim', 'amountpaidoncontentsclaim'].mean()
df_state.columns = ['Amount Paid on Building Claim', 'Amount Paid on Contents Claim']

app.layout = html.Div([
    html.H1(
        children='openFEMA claims data',
        style={
            'textAlign': 'center'
        }
    ),
    dcc.Dropdown(
        id='data-type',
        options=[{'label': i, 'value': i} for i in df_state.columns],
        value='Amount Paid on Building Claim'
    ),

    dcc.Graph(
        id='usa-map'
    )
])

@app.callback(
    Output('usa-map', 'figure'),
    [Input('data-type', 'value')]
)
def update_map(data):
    return {
            'data': [go.Choropleth(
                    locations = df_state.index,
                    z = round(df_state[data], 2),
                    locationmode = 'USA-states',
                    colorscale = 'Reds',
                    colorbar_title = "USD")
            ],
            'layout': go.Layout(
                title_text = data + ' by State',
                geo_scope='usa', # limite map scope to USA
            )
        }

if __name__ == '__main__':
    app.run_server(debug=True)