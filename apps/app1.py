import dash_bootstrap_components as dbc
import dash_core_components as dcc
import dash_html_components as html
from dash.dependencies import Input, Output

import plotly.graph_objs as go
from apps.data_processing import df, df_year_claims, df_lr, cat_columns, disaster_nums, model, model1, df_merged

from app import app

claim_model = html.Div(
    [
        dbc.Row(
            [
                dbc.Col(
                    dbc.Card(
                        [
                            dcc.Graph(
                                id='vulnerability-map',
                                figure={
                                    'data': [
                                        go.Choropleth(
                                            locations = df_merged['state'],
                                            z = df_merged['score'],
                                            locationmode = 'USA-states',
                                            colorscale = 'reds',
                                            colorbar_title = "USD"
                                        )
                                    ],
                                    'layout': go.Layout(
                                        title_text = 'Climate Vulnerability Scores by State',
                                        geo_scope='usa', # limite map scope to USA
                                        height=730,
                                        margin={
                                            'l': 25,
                                            'r': 0,
                                            'b': 25,
                                            't': 100,
                                        }
                                    )
                                })
                        ],
                    ),
                    width = {'size':6},
                ),
                dbc.Col(
                    [
                        dbc.Row(
                            [
                                dbc.Col(
                                    html.H6(
                                        'Type of Disaster: '
                                    ),
                                    width={'size':3}
                                ),
                                dbc.Col(
                                    dcc.Dropdown(
                                        id='type-of-disaster',
                                        options=[
                                            {'label': i, 'value': i} for i in disaster_nums['incidentType'].unique()
                                        ],
                                        style= {
                                            'font-size': '14px',
                                            'width':'160px'
                                        },
                                        value='Flood'
                                    ),
                                    width={'size':2}
                                )
                            ],
                            align='center',
                            justify='center'
                        ),
                        dbc.Card(
                            dcc.Graph(
                                id='disaster-trend',
                            )
                        ),
                        dbc.Card(
                            dcc.Graph(
                                id='categorical',
                            )
                        ),
                    ],
                    width={'size':4},
                )
            ],
            justify="center",
            style={
                'padding-bottom': '50px'
            }
        ),
    ],
    className="mt-4",
)

@app.callback(
    Output('disaster-trend', 'figure'),
    [
        Input('type-of-disaster', 'value')
    ]
)
def update_disaster_trend(disaster_type):
    disaster_count_year = disaster_nums[disaster_nums['incidentType'] == disaster_type].groupby(['year'])['incidentType'].count().reset_index()
    return {
        'data': [
            go.Bar(
                x = disaster_count_year['year'],
                y = disaster_count_year['incidentType']
            )
        ],
        'layout': go.Layout(
            xaxis={
                'title': 'Year',
                'tickmode': 'auto',
                'tick0': 1980,
                'dtick': 1
            },
            yaxis={
                'title': '{} Count'.format(str(disaster_type))
            },
            height=330,
            margin={
                'l': 60,
                'r': 25,
                'b': 60,
                't': 75,
            }
        )
    }


layout = html.Div([
    claim_model
])