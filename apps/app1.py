import dash_bootstrap_components as dbc
import dash_core_components as dcc
import dash_html_components as html
from dash.dependencies import Input, Output

import plotly.graph_objs as go
from apps.data_processing import df, df_year_claims, df_lr, cat_columns, disaster_nums, model, model1, df_merged

from app import app

claim_model = html.Div(
    [
        dbc.Row(
            [
                dbc.Col(
                    dbc.Card(
                        [
                            dcc.Graph(
                                id='vulnerability-map',
                                figure={
                                    'data': [
                                        go.Choropleth(
                                            locations = df_merged['state'],
                                            z = df_merged['score'],
                                            locationmode = 'USA-states',
                                            colorscale = 'reds',
                                            colorbar_title = "USD"
                                        )
                                    ],
                                    'layout': go.Layout(
                                        title_text = 'Climate Vulnerability Scores by State',
                                        geo_scope='usa', # limite map scope to USA
                                        height=730,
                                        margin={
                                            'l': 25,
                                            'r': 0,
                                            'b': 25,
                                            't': 100,
                                        }
                                    )
                                }),
                            dcc.RangeSlider(
                                id='year-slider',
                                min = df['year'].min(),
                                max = df['year'].max(),
                                value = [df['year'].min(), df['year'].max()],
                                marks = {
                                    str(year): {
                                        'label': str(year),
                                        'style': {'transform': 'rotate(-65deg)' 'scale(0.8,0.8)' 'translate(-20px, -10px)'}
                                        } for year in df['year'].unique()
                                    },
                            )
                        ],
                    ),
                    width = {'size':6},
                ),
                dbc.Col(
                    [
                        dbc.Card(
                            dcc.Graph(
                                id='trend',
                                figure={
                                    'data': [
                                        go.Scatter(
                                            y=df_year_claims['amountpaidoncontentsclaim'],
                                            x=df_year_claims['year'],
                                            mode='lines+markers',
                                            name='Amount Paid on Contents Claim'
                                            ),
                                        go.Scatter(
                                            y=df_year_claims['amountpaidonbuildingclaim'],
                                            x=df_year_claims['year'],
                                            mode='lines+markers',
                                            name='Amount Paid on Building Claim'
                                            )
                                        ],
                                    'layout': go.Layout(
                                        title='Claim Amount over Time by Type',
                                        showlegend=True,
                                        legend=dict(x=0.1, y=1),
                                        paper_bgcolor='rgba(0,0,0,0)',
                                        plot_bgcolor='rgba(0,0,0,0)',
                                        height=375,
                                        margin={
                                            'l': 40,
                                            'r': 40,
                                            'b': 40,
                                            't': 60,
                                        }
                                    )
                                }
                            )
                        ),
                        dbc.Row(
                            [
                                dbc.Col(
                                    html.H6(
                                        'Category for Graph Below'
                                    ),
                                    width={'size':4}
                                ),
                                dbc.Col(
                                    dcc.Dropdown(
                                        id='cat-type',
                                        options=[
                                            {'label': i, 'value': i} for i in cat_columns
                                            ],
                                        style= {
                                            'font-size': '14px',
                                            'width':'300px'
                                        },
                                        value='numberoffloorsintheinsuredbuilding'
                                    ),
                                    width={'size':5.5}
                                )
                            ],
                            align='center',
                            justify='center'
                        ),
                        dbc.Card(
                            dcc.Graph(
                                id='categorical',
                            )
                        ),
                    ],
                    width={'size':4},
                )
            ],
            justify="center",
            style={
                'padding-bottom': '50px'
            }
        ),
    ],
    className="mt-4",
)

layout = html.Div([
    claim_model
])